Hello - from c:\Users\ajaz2\.vscode\extensions\jaredly.reason-vscode-1.7.13\bin.native.exe.hot.exe
Previous log location: C:\Users\ajaz2\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/OCaml64/home/ajaz2/ocamlTest/test.ml","languageId":"ocaml","version":1,"text":"(*let divides k n =\n  n mod k = 0 ;;\n\n\nlet rec noDivisorsFrom m n =\n  if m = n-1\n    then not(divides m n) else\n      not (divides m n) && noDivisorsFrom(m+1) n;;\n\nlet value = noDivisorsFrom 23 4;;\n\n(*Function to find the exponent from a number*)\nlet rec find_exponent n m =\n  if m = 0 then\n    1\n  else \n    n * find_exponent n (m - 1);;\n\n    find_exponent 42 5;; *)\n\n\n(*let x = 4 in x + 7;;\n\nlet x = 5 in let x = 9 in x;;\n\nlet x = 4 in \n(let x = 8 in x) + x;;\n\n(true, (\"nested\", \"pair\") , 10, \"pair\");;\n\nlet max2 p =\n  let (x, y) = p\nin if x > y then x else y;;\n\nlet result = max2 (3, 7);;\n\nlet sum t =\n  let (x , y , z) = t\nin x +. y +. z;;\n\nsum (57., 7.62 , 898.2);;\n\nlet rec naivesum n = \n  if n = 1\n    then 1\nelse n + naivesum (n-1);;\n\nnaivesum 1000;;\n\nlet rec fib n =\n  if n < 2\n  then n\nelse fib(n-1) + fib(n-2);;\n\nfib 10;;\n\nlet matrix_multiply ((a, b), (c, d)) ((e, f), (g, h)) =\n  let open Int64 in\n  let ae = add (mul a e) (mul b g) in\n  let bf = add (mul b f) (mul d h) in\n  let cg = add (mul c e) (mul d g) in\n  let dh = add (mul c f) (mul d h) in\n  ((ae, bf), (cg, dh))\n\nlet rec matrix_power m n =\n  if n = 1L then m\n  else if Int64.rem n 2L = 0L then\n    let half_pow = matrix_power m (Int64.div n 2L) in\n    matrix_multiply half_pow half_pow\n  else\n    matrix_multiply m (matrix_power m (Int64.sub n 1L))\n\nlet fib_matrix n =\n  let fib_matrix = ((1L, 1L), (1L, 0L)) in\n  let result_matrix = matrix_power fib_matrix n in\n  match result_matrix with\n  | ((result, _), _) -> result\n\nlet () =\n  let n = 50L in (* Change this to the desired Fibonacci number you want to compute *)\n  let result = fib_matrix n in\n  Printf.printf \"Fibonacci(%Ld) = %Ld\\n\" n result*)\n\nlet rec naivesum n =\n  if n = 1\n  then 1\n  else n + naivesum (n-1);;\n\nlet fastfib k =\n  let minifib p = let (a, b) = p in (b, a+b) in\n  let rec auxfib n =\n  if n = 0\n    then (0,1)\n  else minifib (auxfib (n-1))\n    in\n    let (x,_) = auxfib k in x;"}}}
